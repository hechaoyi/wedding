buildscript {
  repositories { jcenter() }
  dependencies { classpath "com.sahlbach.gradle:gradle-jetty-eclipse-plugin:1.9.1" }
}
apply plugin: "war"
apply plugin: "eclipse"
apply plugin: "jettyEclipse"

sourceCompatibility = "1.7"
tasks.withType(JavaCompile) { options.encoding = "UTF-8" }
eclipse.classpath.defaultOutputDir = file("$buildDir/output")
jettyEclipse.contextPath = "/"

repositories { mavenCentral() }
dependencies {
  // framework
  compile "org.springframework:spring-webmvc:4.0.3.RELEASE"
  compile "org.springframework:spring-websocket:4.0.3.RELEASE"
  compile "org.springframework:spring-messaging:4.0.3.RELEASE"
  providedCompile "javax.servlet:javax.servlet-api:3.1.0"
  // tool
  compile "com.fasterxml.jackson.core:jackson-databind:2.3.2"
  compile "com.google.guava:guava:16.0.1"
  // compile "redis.clients:jedis:2.4.2"
  runtime "org.eclipse.jetty.websocket:websocket-server:9.1.1.v20140108"
  // log
  compile "org.slf4j:slf4j-api:1.7.7"
  runtime "org.slf4j:jcl-over-slf4j:1.7.7"
  runtime "ch.qos.logback:logback-classic:1.1.2"
  // webjars
  runtime "org.webjars:sockjs-client:0.3.4"
  runtime "org.webjars:stomp-websocket:2.3.0"
}
configurations {
  compile.exclude module: "commons-logging"
}

task listJars << {
  println "compile:"
  configurations.compile
    .collect{ it.name }.sort().each{ println "\t"+it }
  println "runtime:"
  (configurations.runtime-configurations.compile)
    .collect{ it.name }.sort().each{ println "\t"+it }
}
